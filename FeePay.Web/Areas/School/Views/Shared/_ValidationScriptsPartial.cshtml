<script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
<script src="~/lib/jquery-validation/dist/additional-methods.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
<script>
    (function ($) {
        "use strict";
        jQuery.validator.setDefaults({
            onfocusout: function (e) { this.element(e); },
            onkeyup: function (e) { this.element(e); },

            highlight: function (element) {
                jQuery(element).closest('.form-control').addClass('is-invalid');
                //console.log("highlight:", $(".validation-summary-error"));
            },
            unhighlight: function (element) {
                jQuery(element).closest('.form-control').removeClass('is-invalid');
                jQuery(element).closest('.form-control').addClass('is-valid');
            },

            errorElement: 'div',
            errorClass: 'invalid-feedback',
            errorPlacement: function (error, element) {
                if (element.parent('.input-group-prepend').length) $(element).siblings(".invalid-feedback").append(error); //error.insertAfter(element.parent());
                else error.insertAfter(element);
            },
            showErrors: function (errorMap, errorList) {
                var es = $("#form-validation-summary");
                (this.numberOfInvalids()) ? es.show() : es.hide();
                this.defaultShowErrors();
            }
        });
        // file maxsize validation
        $.validator.addMethod("file-maxsize", function (value, element, params) {
            if (value && element.files[0]) {
                var allowedMinSize = params.value;
                var selectedFileSizeInKByte = element.files[0].size / 1024;
                return selectedFileSizeInKByte <= allowedMinSize;
            }
            return true;
        });
        $.validator.unobtrusive.adapters.add("file-maxsize", ['value'], function (options) {
            options.rules["file-maxsize"] = options.params;
            options.messages["file-maxsize"] = options.message;
        });
        // file type va;idation

        $.validator.addMethod("filetype", function (value, element, params) {
            var selectedFileType = value.split('.').pop();
            var validFileTypes = params.validtypes;
            return validFileTypes.toLowerCase().indexOf(selectedFileType.toLowerCase()) !== -1;
        });

        $.validator.unobtrusive.adapters.add("filetype", ['validtypes'], function (options) {
            options.rules.filetype = options.params;
            options.messages["filetype"] = options.message;
        });
    })(jQuery);
</script>
